using Servidor.Network;

namespace Servidor;

/// <summary>
/// Programa principal do servidor
/// Demonstra comunica√ß√£o TCP robusta com paralelismo para m√∫ltiplos clientes
/// </summary>
class Program
{
    static async Task Main(string[] args)
    {
        Console.WriteLine("üéÆ SERVIDOR DE JOGO ASTEROIDES");
        Console.WriteLine("================================");
        Console.WriteLine();
        Console.WriteLine("üìã FUNCIONALIDADES IMPLEMENTADAS:");
        Console.WriteLine("‚úÖ Comunica√ß√£o TCP robusta cliente-servidor");
        Console.WriteLine("‚úÖ Paralelismo para m√∫ltiplos clientes simult√¢neos");
        Console.WriteLine("‚úÖ Programa√ß√£o paralela (Parallel.ForEach) para c√°lculo de colis√µes");
        Console.WriteLine("‚úÖ Tratamento de falhas e desconex√µes");
        Console.WriteLine();

        var servidor = new TcpGameServer(8080);

        // Configurar tratamento de Ctrl+C para parada limpa
        Console.CancelKeyPress += (sender, e) =>
        {
            e.Cancel = true;
            Console.WriteLine("\nüõë Recebido sinal de parada...");
            servidor.PararServidor();
            Environment.Exit(0);
        };

        try
        {
            // Iniciar servidor de forma ass√≠ncrona
            await servidor.IniciarServidorAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"‚ùå Erro fatal no servidor: {ex.Message}");
            Console.WriteLine("Pressione qualquer tecla para sair...");
            Console.ReadKey();
        }
    }
}